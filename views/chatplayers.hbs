<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>AMPLink Control Panel</title>
<link href="/style.css" rel="stylesheet" type="text/css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
</head>
<body>
<iframe name="dummy" style="display:none;"></iframe>
<div class="sidenav">
  <img src="resources/images/branding.png" alt="branding" width="200" height="80">
  <a href="/">Home</a>
  <a href="/panel">Server Control Panel&nbsp;</a>
  <a href="/console">Server Console</a>
  <a href="/players">Chat/Players</a>
  <a href="/grids">Grids/Entities</a>
  <a href="/users">Users</a>
  <a href="/about">About</a>
  <div class="brightercolor"><a href="#">Welcome, <b>{{#if message }}{{message}}{{/if}}</b><br><form action="/logout"><input type="submit" value="Logout" class="btn btn-danger"></form></a></div>
</div>
<main class="content">
  <h2>Chat &amp; Players Management</h2>
  <p class="subtitle2">Chat &amp; Players Management</p>
  <!--Container-->
<div class="row">

<!--Divider-->
		<div class="col-xl-6" name="copyme" style=""><div class="console" id="scroller"><span id="variable">{{variable}}</span></div>
    
    <div class="callout-inverted">
    <form action="/postMessage" method="POST" style="width: 100%">
      <label for="string" class="form-label">Actions:</label><br>
      <input type="text" class="form-control" id="command" name="command" required><br><br>
      <button type="submit" class="btn btn-success" id="liveToastBtn" style="float:left; margin-right: 10px; margin-top: -40px;">Send Message</button>
    </form>
    
    <!--Toast
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
      <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
          <img src="./resources/images/configurator/check.png" class="rounded me-2" alt="sent">
          <strong class="me-auto">Action sent.</strong>
          <small>Now</small>
          <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          Message has been sent to server.
        </div>
      </div>
    </div>
    <script>
    const toastTrigger = document.getElementById('liveToastBtn')
    const toastLiveExample = document.getElementById('liveToast')

    if (toastTrigger) {
      const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample)
      toastTrigger.addEventListener('click', () => {
        toastBootstrap.show()
      })
    }
    </script>-->
    <!--End Toast-->
    {{errormsg}}
    </div>

    </div>

    

  <!--<div style="position:relative; margin-left:34%; top:-49px;">
    <button onclick="copy()" class="btn btn-dark">Copy chat</button>
    <br><br>
    <script>
    function copy() {
    // Get the text field
    var copyText = document.getElementById("variable").innerText;
    navigator.clipboard.writeText(copyText);
    alert("Copied chat.");
    console.log("Copied chat")
}
    </script>
  </div>-->

  <div class="col-xl-5 callout-info"><strong>Current Connected Players</strong><br>Filters <i class="bi bi-funnel-fill"></i> | <button class="btn btn-hidden" onclick="sortTableByName()">Sort by Name <i class="bi bi-sort-alpha-down"></i> <button class="btn btn-hidden" onclick="sortTableByStars();">Sort by Level <i class="bi bi-sort-numeric-down-alt"></i></button></button></strong>
    <hr>
    <div id="players">Please wait, retrieving info...</div>
    <a href="/banned"><button type="submit" class="btn btn-danger">Banned players</button></a>
  </div>
</div>
<div class="row">
</div>
<script>
function sortTableByStars() {
  var table, rows, switching, i, x, y, shouldSwitch;
  table = document.getElementById("myTable");
  switching = true;
  var ascending = table.getAttribute('data-order') === 'asc';
  while (switching) {
    switching = false;
    rows = table.rows;
    for (i = 1; i < (rows.length - 1); i++) {
      shouldSwitch = false;
      x = parseInt(rows[i].getElementsByTagName("TD")[1].innerHTML);
      y = parseInt(rows[i + 1].getElementsByTagName("TD")[1].innerHTML);
      if (ascending ? x > y : x < y) {
        shouldSwitch = true;
        break;
      }
    }
    if (shouldSwitch) {
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
    }
  }
  table.setAttribute('data-order', ascending ? 'desc' : 'asc');
}
</script>
<script>
function sortTableByName() {
  var table, rows, switching, i, x, y, shouldSwitch, ascending;
  table = document.getElementById("myTable");
  switching = true;
  ascending = table.getAttribute('data-sort-direction') === 'asc';
  while (switching) {
    switching = false;
    rows = table.rows;
    for (i = 1; i < (rows.length - 1); i++) {
      shouldSwitch = false;
      x = rows[i].getElementsByTagName("TD")[0];
      y = rows[i + 1].getElementsByTagName("TD")[0];
      if (ascending ? x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase() : x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
        shouldSwitch = true;
        break;
      }
    }
    if (shouldSwitch) {
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
    }
  }
  table.setAttribute('data-sort-direction', ascending ? 'desc' : 'asc');
}

</script>

</div>
</div>



<script>
  const updateVariable = () => {
    fetch('/console/chat')
      .then((response) => response.text())
      
      .then((result) => {
        //JSON.parse(result)
        document.getElementById('variable').innerHTML = result;
        var elem = document.getElementById('scroller');
        elem.scrollTop = elem.scrollHeight;
      });
      
  };

  setInterval(updateVariable, 1000);
</script>

<script>
  const updateVariable2 = () => {
    fetch('/players/list')
      .then((response) => response.text())
      
      .then((result) => {
        //JSON.parse(result)
        document.getElementById('players').innerHTML = result;
      });
      
  };

  setInterval(updateVariable2, 1000);
</script>






</main>
</body>
</html>