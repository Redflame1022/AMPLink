<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>AMPLink Control Panel</title>
<link href="/style.css" rel="stylesheet" type="text/css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
</head>
<body>

<div class="sidenav">
  <img src="/resources/images/branding.png" alt="branding" width="200" height="80">
  <a href="/">Home</a>
  <a href="/panel">Server Control Panel&nbsp;</a>
  <a href="/console">Server Console</a>
  <a href="/players">Chat/Players</a>
  <a href="/grids">Grids/Entities</a>
  <a href="/users">Users</a>
  <a href="/about">About</a>
  <div class="brightercolor"><a href="#">Welcome, <b>{{#if message }}{{message}}{{/if}}</b><br><form action="/logout"><input type="submit" value="Logout" class="btn btn-danger"></form></a></div>
</div>
<main class="content">
<div class="row">
<div class="col-xl-11">
  <div></div>
  <h2>Grids/Entities&nbsp;</h2>
  <p><div class="callout-danger">Grid Data gets queried every 5 seconds.</div></p>
</div><br>

<script>
  // Function to sort the table rows based on input value
    function myFunction() {
      const input = document.getElementById("myInput").value.toUpperCase();
      const blockCount = document.getElementById('myTable').getElementsByTagName('tr');
      const rows = Array.from(blockCount).slice(1);

      rows.forEach(row => {
        const nameValue = row.cells[0].innerText.toUpperCase();
        const blockCountValue = row.cells[1].innerText;
        if (nameValue.indexOf(input) > -1 || blockCountValue.indexOf(input) > -1) {
          row.style.display = "";
        } else {
          row.style.display = "none";
        }
      });
    }
</script>

<div class="col-xl-9">
  <div class="callout-info">
    <span class="text-adaptive"> <strong>Entity List</strong><br>Filters <i class="text-adaptive bi bi-funnel-fill"></i> | <input type="text" class="col-md-5" id="myInput" placeholder="Search..." name="myInput" oninput="myFunction()"> </span>
    <hr>
    <div id="gridlist">Please wait, retrieving info...</div>
  </div>
</div>

<div class="col-xl-2">
  <div class="callout-info">
    <strong>Bulk Delete</strong>
    <hr>
    <div>
      <form action="/cleanup/blocks" method="POST"><button style="padding: 0px;" type="submit" value="Clean Grid Debris" value="Clean Grid Debris" class="btn btn-warning text-white" onclick="return confirm('Are you sure you want to Clean Grid Debris?');">Clean Grid Debris</button></form>

      <form action="/cleanup/floating" method="POST"><button style="padding: 0px;" type="submit" value="Clean Floating Objects" value="Clean Floating Objects" class="btn btn-warning text-white" onclick="return confirm('Are you sure you want to Clean Floating Objects?');">Clean Floating Objects</button></form>
      
      <form action="/cleanup/unowned" method="POST"> <button style="padding: 0px;" type="submit" value="Clean Unowned Grids" value="Clean Unowned Grids" class="btn btn-warning text-white" onclick="return confirm('Are you sure you want to Clean Unowned Grids?');">Clean Unowned Grids</button></form>



      <form action="/cleanup/voxels/planets" method="POST"><button style="padding: 0px;" type="submit" value="Reset Planet Voxels" value="Reset Planet Voxels" class="btn btn-danger text-white" onclick="return confirm('Are you sure you want to Reset Planet Voxels?');">Reset Planet Voxels</button></form>

      <form action="/cleanup/voxels" method="POST"><button style="padding: 0px;" type="submit" value="Reset All Voxels" value="Reset All Voxels" class="btn btn-danger text-white" onclick="return confirm('Are you sure you want to Reset All Voxels?');">Reset All Voxels</button><br><br></form>
      <div style="background-color: rgba(0,0,0,0.1); border-radius:5px; padding:5px; word-wrap: break-word;"><pre>Output:<br>{{errormsg}}</pre></div>

    </div>
  </div>
</div>

</div>

<script>
  const updateVariable = () => {
    fetch('/grids/gridlist/')
  .then(response => response.text())
  .then(html => {
    const parser = new DOMParser();
    const doc = parser.parseFromString(html, 'text/html');
    const scriptTag = doc.querySelector('script');
    const scriptContent = scriptTag.textContent;
    const targetElement = document.getElementById('gridlist');
    targetElement.innerHTML = html;
    // execute the script content if necessary
    eval(scriptContent);
    myFunction()
  });
  };
setInterval(updateVariable, 5000);

</script>


</main>
</body>
</html>