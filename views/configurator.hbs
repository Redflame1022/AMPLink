<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>AMPLink Control Panel</title>
<link href="style.css" rel="stylesheet" type="text/css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

</head>
<body>

<div class="sidenav">
  <img src="resources/images/branding.png" alt="branding" width="200" height="80">
  <a href="/">Home</a>
  <a href="/panel">Server Control Panel&nbsp;</a>
  <a href="/console">Server Console</a>
  <a href="/users">Users</a>
  <a href="/about">About</a>
  <div class="brightercolor"><a href="#">Welcome<br><form action="/logout"><input type="submit" value="Logout" class="btn btn-danger"></form></a></div>
</div>
<main>

<div class="content">
  <h2>AMPLink Configurator</h2>
  <p class="subtitle2">Server String Editor<br>This is still being worked on. Some features don't work.</p>



<div class="row">
<div class="col-xl-4">


<div class="callout-warning">
  <b>Changing any configuration string could break the torch <br>instance, or make AMPLink inaccessible.</b>
</div>

<h3>Plugins Management</h3>
<div class="alert sidebarAccentColor text-white"><strong>INSTALLED PLUGINS</strong>
<hr>
<span id="getAllPlugins"></span>

{{#each result}}
  <tr>
    <td>{{this}}</td>
    <td>
      <!--<form style="float:right; "action="/configurator/plugin/configure/{{this.id}}" method="POST"> <input type="submit" value="Configure" class="btn btn-info"></form>-->
      <form style="float:right;margin-right:10px;"action="/configurator/plugin/delete/{{this.id}}" method="POST"> <input type="submit" value="Remove Plugin" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this plugin? This action cannot be undone!');"></form>
    </td>
  </tr><br><br>
  {{/each}}

</div>
<br>
<div class="alert sidebarAccentColor text-white"><strong>INSTALL A PLUGIN</strong><hr>
<form action="/configurator/plugin/upload/" method="POST">
<div class="mb-3">
  <label id="file" for="formFile" class="form-label">Upload a plugin to server:</label>
  <input class="form-control" type="file" accept=".zip" id="formFile">
  <input type="submit" style="margin-top:10px;" value="Upload Plugin" class="btn btn-success" onclick="return confirm('Are you sure you want to upload this plugin?');">
</div>
</form>
<form action="/postConfiguratorSearch" method="POST">
<input type="submit" style="margin-top:10px;" value="Plugin Search" class="btn btn-secondary">
</form>
</div>


</div>

<div class="col-xl-7">
<h3>Server Management (WIP)</h3>
<div class="alert sidebarAccentColor text-white">
  
  <p><strong>TORCH CONFIGURATION</strong><hr></p>
  <form action="/configurator/plugins/torchConfig/submit" method="POST">
   <label for="textarea">Configuration Text Area:</label><br>
  <pre><textarea name="torchConfig" cols="80" rows="10" id="torchConfig" class="bg-dark text-white">{{torchconf}}</textarea></pre>
  <input type="submit" style="margin-top:10px;" value="Save and Apply Changes" class="btn btn-success" onclick="return confirm('Are you sure you want to upload changes to the plugin?');">
  <input type="reset" style="margin-top:10px;" value="Reset Changes" class="btn btn-warning" >
  <form>
  {{torchMsg}}
</div>

<div class="alert sidebarAccentColor text-white">
  
  <p><strong>SESSION CONFIGURATION</strong><hr></p>
  <form action="/configurator/plugin/properties" method="POST">
    
  <label for="textarea">Configuration Text Area:</label><br>
  <pre><textarea name="torchSession" cols="80" rows="10" id="torchSession" class="bg-dark text-white"></textarea></pre>
  <input type="submit" style="margin-top:10px;" value="Save and Apply Changes" class="btn btn-success" onclick="return confirm('Are you sure you want to upload changes to the plugin?');">
  <input type="reset" style="margin-top:10px;" value="Reset Changes" class="btn btn-warning" >
  <form>
  {{sessionMsg}}
</div>
</div>




</div>
</div>



<script>
  /*const staticData = () => {
    fetch('/configurator/plugins/torchConfig')
      .then((response) => response.text())
      
      .then((result) => {
        JSON.parse(result)
        
        document.getElementById('torchConfig').innerHTML = result;
        
      });
  };
  staticData()*/
  let jsonData = [{"$type":"boolean","value":false,"name":"enableWhitelist"},{"$type":"integer","value":16,"name":"fontSize"},{"$type":"enum","value":"Steam","name":"ugcServiceType"},{"$type":"string","value":null,"name":"loginToken"}];
  let parent = document.getElementById('torchConfig');
  jsonData.forEach(function(data) {
    switch (data.$type) {
      case 'boolean':
        var div = document.createElement("div");
        div.classList.add("bool");
        div.innerHTML = data.value;
        parent.appendChild(div);
        break;
      case 'integer':
        var input = document.createElement("input");
        input.classList.add("integer");
        input.type = "number";
        input.value = data.value;
        parent.appendChild(input);
        break;
      case 'enum':
      case 'string':
        var input = document.createElement("input");
        input.classList.add(data.$type);
        input.type = "text";
        input.value = data.value;
        parent.appendChild(input);
        break;
      default:
        break;
    }
  });
</script>

</main>
</body>
</html>